
You will be given one of the problems below to solve using feature-driven development.
- The program must provide a menu-driven console user interface.
- Use classes to represent the following:
   -> The domain entity (ComplexNumber, Expense, Student, Book)
   -> A UI class, that implements the user interface
   -> A Services class, that implements the required functionalities
- Have 10 programmatically generated entries in the application at start-up.
- Tests and specifications for non-UI functions related to the first functionality.

EXPENSES
Manage a list of expenses. Each expense has a day (integer between 1 and 30), amount of money (positive
integer) and expense type (string). Provide the user the following features:
1. Add a new expense read to the list. Expense data is read from the console.
2. Show the list of expenses on the console.
3. Filter the list so that it contains only expenses above a certain value that is read from the console.
4. Undo the last operation that modified program data. This step can be repeated.

