3. a. Define a predicate to remove from a list all repetitive elements.
Eg.: l=[1,2,1,4,1,3,4] => l=[2,3])
b. Remove all occurrence of a maximum value from a list on integer numbers.
=============================================================================

// Returns number of occurences of element E in the given list L
number_of_elements(E, l1, l2, ..., ln) =
{ 0, L = 0 }
{ 1 + number_of_elements(E, l2, ..., ln), l1 == E }
{ number_of_elements(E, l2, ..., ln), l1 != E }

remove_repetitive(l1, l2, ..., ln) =
{ 0, L = 0 }
{ remove_repetitive(l2, l3, ..., ln), number_of_elements(l1, l1, l2, ..., ln) > 1 }
{ l1 U remove_repetitive(l2, l3, ..., ln), number_of_elements(l1, l1, l2, ..., ln) == 1 }

max(a, b) =
{ a, a >= b }
{ b, b > a }

max_element(l1, l2, ..., ln) =
{ 0, N = 0 }
{ l1, N = 1 }
{ max(l1, max_element(l2, l3, ..., ln)) }

remove_max_value(l1, l2, ..., ln, max_value) =
{ 0, L = 0 }
{ remove_max_value(l2, l3, ..., ln, max_element(max_value, l1, l2, ..., ln), l1 = max_value }
{ l1 U remove_max_value(l2, l3, ..., ln, max_element(max_value, l1, l2, ..., ln)), l1 != max_value }