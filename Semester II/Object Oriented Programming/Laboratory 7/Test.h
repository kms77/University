#include "Domain.h"
#include "Repository.h"
#include "FilesRepository.h"
#include "Service.h"
void AddTurret_ValidInput_ReturnsTrue();
void AddTurret_InvalidInput_ReturnsFalse();
void SaveTurret_ValidInput_ReturnsTrue();
void SaveTurret_InvalidInput_ReturnsFalse();
void SaveTurret_ExistingInput_ReturnsFalse();
void UpdateTurret__ValidInput__ReturnsTrue();
void UpdateTurret__InvalidInput__ReturnsFalse();
void DeleteTurret_InvalidInput_ReturnsFalse();
void DeleteTurret__ValidInput__ReturnsTrue();
void Get_Turrets___Vector_is_empty___Size_is_zero();
void Get_Turrets___Vector_get_one_element___Verify_the_content_of_vector();
void Get_Saved_Turrets___Vector_is_empty___Size_is_zero();
void Get_Saved_Turrets___Vector_get_one_element___Verify_the_content_of_vector();
void NextTurret__EmptyVector__VerifyOutput();
void NextTurret____Not_an_Empty_Vector____Verify_the_content_of_output();
void NextTurret__Not_Empty_Vector__Verify_if_index_statred_again_from_first_element();
void Get_Turrets_by_Size___Vector_is_Empty___Size_is_zero();
void Get_Turrets_by_Size___Vector_is_Not_Empty___Verify_the_content_of_vector();
void Get_Turrets_by_Size_and_Parts___Vector_is_Empty___Size_is_zero();
void Get_Turrets_by_Size_and_Parts___Vector_is_not_Empty___Verify_the_content_of_vector();
void AddTurret___Valid_Input_Added_from_Repository___ReturnsTrue();
void AddTurret___Invalid_Input_Added_from_Repository___ReturnsFalse();
void UpdateTurret___Valid_Input_to_Update_an_element_call_Repository___ReturnsTrue();
void UpdateTurret___Invalid_Input_to_Update_an_element_call_Repository___ReturnsFalse();
void DeleteTurret___Invalid_Input_to_Delete_an_element_call_Repository___ReturnsFalse();
void DeleteTurret___Valid_Input_to_Delete_an_element_call_Repository___ReturnsTrue();
void SaveTurret___Valid_Input_function_call_Repository___ReturnsTrue();
void SaveTurret___Existing_Input_function_call_Repository___ReturnsFalse();
void Get_Turrets___Vector_is_empty_call_Repository___Size_is_zero();
void Get_Turrets___Vector_is_empty__call_Repository__Size_is_one();
void UpdateTurret_EmptyVector_ReturnsFalse();
void DeleteTurret_Emptyector_ReturnsFalse();
void toString___ValidInput___Returns_a_String();
void SaveTurret_ValidInput_MultipleTurretsSaved();
void filelocation___Get_the_Path__Verify_the_Path();
void run_all_tests();